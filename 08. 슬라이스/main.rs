// 소유권을 갖지 않는 또 다른 데이터 타입은 슬라이스이다
// 슬라이스는 컬렌션 전체가 아닌 컬렌션의 연속된 일련의 요소를 참조할 수 있게 한다.

fn main() {
    let s = String::from("Hello, World!");
    
    let hello = &s[0..5]; // [0..5]를 통하여 String의 일부분에 대한 참조자를 얻을 수 있다.
    // 내부적으로는 슬라이스 데이터 구조는 시작 위치와 슬라이스의 길이를 저장한다.

    let hello = &s[..5]; // 만일 인덱스 0부터 시작할 경우 ..앞의 숫자를 생략 할 수 있다.
    
    let all_string = &s[..s.len()];
    let all_string = &s[..]; // 만일 인덱스 마지막을 사용할 경우 ..끝의 숫자를 생략 할 수 있다.

    // s.clear(); => 에러가 발생한다. Clear함수는 STring을 잘라내너야 하여 가변 참조자를 만드는 시도를 하게 된다.
    // 하지만 불변 참조자를 만들었기에 가변 참조자를 만들 수 없다.

    let s2: &str = "Hello, World!"; // 스트링 리터럴은 슬라이스이다. &str은 불변 참조자이기에 불변이다.
    let s3 = &s2[..]; // 스트링 리터럴의 슬라이스로 동작한다.

    let numbers  = [1, 2, 3, 4, 5]; // 이외에도 배열도 슬라이스가 된다.
    let numbers = &numbers[1..];
    println!("{}", numbers[0]);
}